package wsg.tools.internet.base;

import java.io.IOException;
import org.apache.http.HttpHost;
import org.apache.http.client.ResponseHandler;
import org.apache.http.client.methods.HttpUriRequest;
import org.apache.http.client.methods.RequestBuilder;

/**
 * The root interface of a site.
 *
 * @author Kingen
 * @since 2021/4/27
 */
public interface SiteClient {

    /**
     * Returns the name of the site.
     *
     * @return the name
     */
    String getName();

    /**
     * Returns the host of the site.
     *
     * @return the host
     */
    HttpHost getHost();

    /**
     * Executes HTTP request to the target and processes the response using the given response
     * handler.
     *
     * @param request         the request to execute
     * @param responseHandler the response handler
     * @return the response object as generated by the response handler.
     * @throws IOException in case of a problem or the connection was aborted
     */
    <T> T execute(HttpUriRequest request, ResponseHandler<? extends T> responseHandler)
        throws IOException;

    /**
     * An extension of {@link #execute} which returns the response as a {@link ResponseWrapper}.
     *
     * @param builder         the builder to build the request to be executed
     * @param responseHandler the response handler
     * @return a wrapper of the headers and content of the response
     * @throws IOException in case of a problem or the connection was aborted
     */
    <T> ResponseWrapper<T> getResponseWrapper(RequestBuilder builder,
        WrappedResponseHandler<T> responseHandler) throws IOException;

    /**
     * An extension of {@link #execute} which assumes that the content of the response is a {@code
     * String}.
     *
     * @param builder the builder to build the request to be executed
     * @return the content as a string
     * @throws IOException in case of a problem or the connection was aborted
     */
    String getContent(RequestBuilder builder) throws IOException;
}
